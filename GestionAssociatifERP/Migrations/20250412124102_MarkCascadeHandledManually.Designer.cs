// <auto-generated />
using System;
using GestionAssociatifERP.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GestionAssociatifERP.Migrations
{
    [DbContext(typeof(GestionAssociatifDbContext))]
    [Migration("20250412124102_MarkCascadeHandledManually")]
    partial class MarkCascadeHandledManually
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GestionAssociatifERP.Models.DonneeSupplementaire", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Commentaire")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("commentaire");

                    b.Property<int>("EnfantId")
                        .HasColumnType("int")
                        .HasColumnName("enfant_id");

                    b.Property<string>("Parametre")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("parametre");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("type");

                    b.Property<string>("Valeur")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("valeur");

                    b.HasKey("Id")
                        .HasName("PK__donnee_s__3213E83FCB0923C0");

                    b.HasIndex("EnfantId");

                    b.ToTable("donnee_supplementaire");
                });

            modelBuilder.Entity("GestionAssociatifERP.Models.Enfant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Civilite")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("civilite");

                    b.Property<DateOnly?>("DateNaissance")
                        .HasColumnType("date")
                        .HasColumnName("date_naissance");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("Nom")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nom");

                    b.Property<string>("Prenom")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("prenom");

                    b.Property<bool?>("PresenceFratrie")
                        .HasColumnType("bit")
                        .HasColumnName("presence_fratrie");

                    b.Property<string>("Telephone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("telephone");

                    b.Property<string>("VilleNaissance")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ville_naissance");

                    b.HasKey("Id")
                        .HasName("PK__enfant__3213E83F21B6F534");

                    b.ToTable("enfant");
                });

            modelBuilder.Entity("GestionAssociatifERP.Models.InformationFinanciere", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly?>("DateDebut")
                        .HasColumnType("date")
                        .HasColumnName("date_debut");

                    b.Property<DateOnly?>("DateFin")
                        .HasColumnType("date")
                        .HasColumnName("date_fin");

                    b.Property<string>("Modele")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("modele");

                    b.Property<int?>("QuotientFamiliale")
                        .HasColumnType("int")
                        .HasColumnName("quotient_familiale");

                    b.Property<int>("ResponsableId")
                        .HasColumnType("int")
                        .HasColumnName("responsable_id");

                    b.Property<decimal?>("RevenuAnnuel")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("revenu_annuel");

                    b.Property<decimal?>("RevenuMensuel")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("revenu_mensuel");

                    b.HasKey("Id")
                        .HasName("PK__informat__3213E83F2EC9DD4D");

                    b.HasIndex(new[] { "ResponsableId" }, "UQ__informat__02BC536E4507DFCE")
                        .IsUnique();

                    b.ToTable("information_financiere");
                });

            modelBuilder.Entity("GestionAssociatifERP.Models.PersonneAutorisee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nom")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nom");

                    b.Property<string>("Prenom")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("prenom");

                    b.Property<string>("Telephone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("telephone");

                    b.HasKey("Id")
                        .HasName("PK__personne__3213E83FBB21BAC4");

                    b.ToTable("personne_autorisee");
                });

            modelBuilder.Entity("GestionAssociatifERP.Models.PersonneAutoriseeEnfant", b =>
                {
                    b.Property<int>("PersonneAutoriseeId")
                        .HasColumnType("int")
                        .HasColumnName("personne_autorisee_id");

                    b.Property<int>("EnfantId")
                        .HasColumnType("int")
                        .HasColumnName("enfant_id");

                    b.Property<string>("Affiliation")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("affiliation");

                    b.Property<string>("Commentaire")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("commentaire");

                    b.Property<bool?>("ContactUrgence")
                        .HasColumnType("bit")
                        .HasColumnName("contact_urgence");

                    b.HasKey("PersonneAutoriseeId", "EnfantId")
                        .HasName("PK__personne__D627FA0E735E9FB4");

                    b.HasIndex("EnfantId");

                    b.ToTable("personne_autorisee_enfant");
                });

            modelBuilder.Entity("GestionAssociatifERP.Models.Responsable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adresse")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("adresse");

                    b.Property<string>("Civilite")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("civilite");

                    b.Property<string>("CodePostal")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("code_postal");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("Nom")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nom");

                    b.Property<string>("NomNaissance")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nom_naissance");

                    b.Property<string>("NumeroAlloc")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("numero_alloc");

                    b.Property<string>("Prenom")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("prenom");

                    b.Property<string>("Telephone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("telephone");

                    b.Property<string>("Telephone2")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("telephone2");

                    b.Property<string>("Ville")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ville");

                    b.HasKey("Id")
                        .HasName("PK__responsa__3213E83F3AA359CD");

                    b.ToTable("responsable");
                });

            modelBuilder.Entity("GestionAssociatifERP.Models.ResponsableEnfant", b =>
                {
                    b.Property<int>("ResponsableId")
                        .HasColumnType("int")
                        .HasColumnName("responsable_id");

                    b.Property<int>("EnfantId")
                        .HasColumnType("int")
                        .HasColumnName("enfant_id");

                    b.Property<string>("Affiliation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("affiliation");

                    b.HasKey("ResponsableId", "EnfantId")
                        .HasName("PK__responsa__CB2A4AEE6C215CCB");

                    b.HasIndex("EnfantId");

                    b.ToTable("responsable_enfant");
                });

            modelBuilder.Entity("GestionAssociatifERP.Models.SituationPersonnelle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Regime")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("regime");

                    b.Property<int>("ResponsableId")
                        .HasColumnType("int")
                        .HasColumnName("responsable_id");

                    b.Property<string>("Secteur")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("secteur");

                    b.Property<string>("SituationFamiliale")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("situation_familiale");

                    b.Property<string>("Zone")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("zone");

                    b.HasKey("Id")
                        .HasName("PK__situatio__3213E83F1F894EA8");

                    b.HasIndex(new[] { "ResponsableId" }, "UQ__situatio__02BC536E52B651A0")
                        .IsUnique();

                    b.ToTable("situation_personnelle");
                });

            modelBuilder.Entity("GestionAssociatifERP.Models.DonneeSupplementaire", b =>
                {
                    b.HasOne("GestionAssociatifERP.Models.Enfant", "Enfant")
                        .WithMany("DonneeSupplementaires")
                        .HasForeignKey("EnfantId")
                        .IsRequired()
                        .HasConstraintName("FK__donnee_su__enfan__6E01572D");

                    b.Navigation("Enfant");
                });

            modelBuilder.Entity("GestionAssociatifERP.Models.InformationFinanciere", b =>
                {
                    b.HasOne("GestionAssociatifERP.Models.Responsable", "Responsable")
                        .WithOne("InformationFinanciere")
                        .HasForeignKey("GestionAssociatifERP.Models.InformationFinanciere", "ResponsableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__informati__respo__6EF57B66");

                    b.Navigation("Responsable");
                });

            modelBuilder.Entity("GestionAssociatifERP.Models.PersonneAutoriseeEnfant", b =>
                {
                    b.HasOne("GestionAssociatifERP.Models.Enfant", "Enfant")
                        .WithMany("PersonneAutoriseeEnfants")
                        .HasForeignKey("EnfantId")
                        .IsRequired()
                        .HasConstraintName("FK__personne___enfan__72C60C4A");

                    b.HasOne("GestionAssociatifERP.Models.PersonneAutorisee", "PersonneAutorisee")
                        .WithMany("PersonneAutoriseeEnfants")
                        .HasForeignKey("PersonneAutoriseeId")
                        .IsRequired()
                        .HasConstraintName("FK__personne___perso__71D1E811");

                    b.Navigation("Enfant");

                    b.Navigation("PersonneAutorisee");
                });

            modelBuilder.Entity("GestionAssociatifERP.Models.ResponsableEnfant", b =>
                {
                    b.HasOne("GestionAssociatifERP.Models.Enfant", "Enfant")
                        .WithMany("ResponsableEnfants")
                        .HasForeignKey("EnfantId")
                        .IsRequired()
                        .HasConstraintName("FK__responsab__enfan__70DDC3D8");

                    b.HasOne("GestionAssociatifERP.Models.Responsable", "Responsable")
                        .WithMany("ResponsableEnfants")
                        .HasForeignKey("ResponsableId")
                        .IsRequired()
                        .HasConstraintName("FK__responsab__respo__6FE99F9F");

                    b.Navigation("Enfant");

                    b.Navigation("Responsable");
                });

            modelBuilder.Entity("GestionAssociatifERP.Models.SituationPersonnelle", b =>
                {
                    b.HasOne("GestionAssociatifERP.Models.Responsable", "Responsable")
                        .WithOne("SituationPersonnelle")
                        .HasForeignKey("GestionAssociatifERP.Models.SituationPersonnelle", "ResponsableId")
                        .IsRequired()
                        .HasConstraintName("FK__situation__respo__73BA3083");

                    b.Navigation("Responsable");
                });

            modelBuilder.Entity("GestionAssociatifERP.Models.Enfant", b =>
                {
                    b.Navigation("DonneeSupplementaires");

                    b.Navigation("PersonneAutoriseeEnfants");

                    b.Navigation("ResponsableEnfants");
                });

            modelBuilder.Entity("GestionAssociatifERP.Models.PersonneAutorisee", b =>
                {
                    b.Navigation("PersonneAutoriseeEnfants");
                });

            modelBuilder.Entity("GestionAssociatifERP.Models.Responsable", b =>
                {
                    b.Navigation("InformationFinanciere");

                    b.Navigation("ResponsableEnfants");

                    b.Navigation("SituationPersonnelle");
                });
#pragma warning restore 612, 618
        }
    }
}
